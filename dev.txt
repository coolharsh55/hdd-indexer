HDD Indexer dev notes
========================================================

--------------------------------------------------------
__Loader__

- download only missing fields
    + calculate score based on missing fields
    + decide which service to query based on score
    
    if IMDb_ID:
        if ratings are missing
            use omdb
        if title, release date, cast and crew are missing
            use tmdb
    else:
        use opensub to get imdb id
        start again

--------------------------------------------------------
__Testing__

- Find and configure a testing solution
- How to test files, apis remotely?
- validation tests
- when internet is connected/disconnected
- selenium test for interactions

--------------------------------------------------------
__apis__
- check if tmdb api key is valid
- check if tmdb service is online
- check if opensub api key is valid
- check if opensub service is online

--------------------------------------------------------
__code review__
- find a code review solution
- use strict pep8/flake/lint conventions in code

--------------------------------------------------------
__remote server__
- design a remote server based on requirements
- see if flask + app engine can fulfill requirements
- map GET/POST requests
- check what requires authentication
- check which database is sufficient
- check available space and how many users/hdd data can be stored
- check if this database would be illegal
- user registration for hdd

========================================================

remote server:
    register with email -> gives an API key
    send via sendgrid
    forgot API key -> register new API key
    send via sendgrid
    review all requests manually by me

use without remote server support
    do not enter API key in setup

API key setup
    change API key in settings
    show text: registered as name@hdd-indexer

comparator:
    send IMDb ID + movie title to server
    send remote disk instance name to server

    response:
        remote disk bad name

        give/take list
        match IMDb ID and get set difference

    generate script:
        generate give.py and take.py to be executed on disk root
        OR
        generate give.dat and take.dat to be selected on this instance
        select other disk attached
        give -> copies files to the other disk
        take -> copies files to this disk
        select movies in take list with checkboxes
        